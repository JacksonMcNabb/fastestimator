pipeline{
    agent {label 'master'}

    environment {
        JENKINS_ANACONDA_DIR='/home/ubuntu/anaconda3'
        JENKINS_PYTHON_ENV='nightly_env'
        LOCAL_DATASET_PATH='/home/ubuntu/fastestimator_data'
        S3_DATASET_PATH='s3://fastestimator-public/nightly_test'
    }

    stages {
        stage('Build-and-test'){
            parallel{
                stage('GPU'){
                    agent {label 'nightly-gpu'}
                    stages{
                        stage('Build-GPU'){
                            steps{
                                sh '''
                                    . $JENKINS_ANACONDA_DIR/etc/profile.d/conda.sh
                                    if [ ! -d "$JENKINS_ANACONDA_DIR/envs/nightly_env"  ]; then
                                        conda create --name $JENKINS_PYTHON_ENV python=3.6 -y
                                    fi

                                    conda activate $JENKINS_PYTHON_ENV
                                    pip install -e .
                                    pip install pytest ipython ipykernel ipywidgets papermill
                                    ipython kernel install --user --name nightly_build

                                    aws s3 sync $S3_DATASET_PATH $LOCAL_DATASET_PATH --delete
                                '''
                            }
                        }
                        stage('Test-GPU'){
                            steps{
                                sh '''
                                    . $JENKINS_ANACONDA_DIR/etc/profile.d/conda.sh
                                    conda activate $JENKINS_PYTHON_ENV
                                    python3 test/run_nightly_build.py
                                '''
                            }
                        }
                    }
                }

                stage('CPU'){
                    agent {label 'nightly-cpu'}
                    stages{
                        stage('Build-CPU'){
                            steps{
                                sh '''
                                    . $JENKINS_ANACONDA_DIR/etc/profile.d/conda.sh
                                    if [ ! -d "$JENKINS_ANACONDA_DIR/envs/nightly_env"  ]; then
                                        conda create --name $JENKINS_PYTHON_ENV python=3.6 -y
                                    fi

                                    conda activate $JENKINS_PYTHON_ENV
                                    pip install -e .
                                    pip install pytest ipython ipykernel ipywidgets papermill
                                    ipython kernel install --user --name nightly_build

                                    aws s3 sync $S3_DATASET_PATH $LOCAL_DATASET_PATH --delete
                                '''
                            }
                        }
                        stage('Test-CPU'){
                            steps{
                                sh '''
                                    . $JENKINS_ANACONDA_DIR/etc/profile.d/conda.sh
                                    conda activate $JENKINS_PYTHON_ENV
                                    python3 test/run_nightly_build.py
                                '''
                            }
                        }
                    }
                }
            }
        }

        stage('Deply-pypi'){
            agent {label 'master'}
            steps{
                withCredentials([string(credentialsId: 'pypi_password', variable: 'PYPI_PWD')]) {

                    sh '''#!/bin/bash
                        source ~/.bashrc
                        . $JENKINS_ANACONDA_DIR/etc/profile.d/conda.sh
                        if [ ! -d "$JENKINS_ANACONDA_DIR/envs/nightly_env"  ]; then
                            conda create --name $JENKINS_PYTHON_ENV python=3.6 -y
                        fi

                        conda activate $JENKINS_PYTHON_ENV
                        pip install -e .
                        pip install twine
                        rm -rf dist/*
                        FASTESTIMATOR_IS_NIGHTLY=1 python setup.py sdist bdist_wheel
                        twine upload dist/* -u fastestimatordev -p ${PYPI_PWD}
                    '''
                }
            }
        }

        stage('Deploy-docker'){
            agent {label 'master'}
            steps{
                sh '''
                    rm -rf ./fastestimator-misc
                    git clone https://github.com/fastestimator-util/fastestimator-misc.git fastestimator-misc
                '''
                withDockerRegistry(credentialsId: 'docker_hub_credentials', url:'') {
                    sh '''
                        docker build -t fastestimator/fastestimator:nightly-cpu --no-cache - < fastestimator-misc/docker/nightly/Dockerfile.cpu
                        docker push fastestimator/fastestimator:nightly-cpu
                        docker build -t fastestimator/fastestimator:nightly-gpu --no-cache - < fastestimator-misc/docker/nightly/Dockerfile.gpu
                        docker push fastestimator/fastestimator:nightly-gpu
                        docker image prune -f
                    '''
                }
            }
        }
    }
}